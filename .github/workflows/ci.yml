name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  # Run tests and generate code coverage.
  test:
    name: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup rust env
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          components: llvm-tools-preview
          toolchain: nightly-2022-11-03
          override: true
      - name: Retreive cached dependecies
        uses: Swatinem/rust-cache@v2
      - name: Setup coverage env
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: Generate code coverage
        run: cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: lcov.info
          fail_ci_if_error: false

  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          components: rustfmt
          toolchain: nightly-2022-11-03
      - uses: Swatinem/rust-cache@v2
      - run: cargo +nightly-2022-11-03 fmt --all -- --check

  # Checks all .cairo files in the repo are formatted correctly.
  cairofmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2022-11-03
      - uses: Swatinem/rust-cache@v2
      - run: cargo +nightly-2022-11-03 run --bin cairo-format -- --check --recursive

  # Checks all cairo corelib tests run correctly.
  cairotest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2022-11-03
      - uses: Swatinem/rust-cache@v2
      - run: cargo +nightly-2022-11-03 run --bin cairo-test -- --path corelib/
      - run: cargo +nightly-2022-11-03 run --bin cairo-test -- --path crates/cairo-lang-starknet/cairo_level_tests/ --starknet

  # Check for unnecessary dependencies.
  udeps:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        name: "Rust Toolchain Setup"
        with:
          profile: minimal
          toolchain: nightly-2022-11-03
      - uses: Swatinem/rust-cache@v2
      - name: "Download and run cargo-udeps"
        run: |
          wget -O - -c https://github.com/est31/cargo-udeps/releases/download/v0.1.35/cargo-udeps-v0.1.35-x86_64-unknown-linux-gnu.tar.gz | tar -xz
          cargo-udeps-*/cargo-udeps udeps
        env:
          RUSTUP_TOOLCHAIN: nightly-2022-11-03

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          components: clippy
          toolchain: stable
      - uses: Swatinem/rust-cache@v2
      - run: >
          cargo clippy --all-targets --all-features -- -D warnings -D future-incompatible
          -D nonstandard-style -D rust-2018-idioms -D unused

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@v2
      - run: >
          RUSTDOCFLAGS="-Dwarnings" cargo doc --document-private-items --no-deps --all-features
