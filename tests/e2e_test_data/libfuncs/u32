//! > u32_try_from_felt252 libfunc

//! > test_runner_name
SmallE2ETestRunner

//! > cairo
fn foo() {
    let t0 = store_temp(1);
    let ul0 = alloc_local();
    let sl0 = store_local(ul0, 3);

    disable_ap_tracking();
    enable_ap_tracking();

    let t0 = store_temp(1);
    let ul0 = alloc_local();
    let sl0 = store_local(ul0, 3);
    finalize_locals();
    disable_ap_tracking();
}
extern type Uninitialized<T>;
impl ADrop<T> of Drop<Uninitialized<T>>;
extern fn store_temp<T>(x:T)->T implicits () nopanic;
extern fn store_local<T>(x:Uninitialized<T>, y:T)->T implicits () nopanic;
extern fn alloc_local<T>()->Uninitialized<T> implicits () nopanic;
extern fn finalize_locals() implicits () nopanic;
extern fn disable_ap_tracking() implicits () nopanic;
extern fn enable_ap_tracking() implicits () nopanic;

//! > casm
[ap + 0] = 1, ap++;
[fp + 1] = 3;
[ap + 0] = 1, ap++;
[fp + 2] = 3;
ap += 2;
ret;

//! > function_costs
test::foo: OrderedHashMap({Const: 500})

//! > sierra_code
type felt252 = felt252;
type Uninitialized<felt252> = Uninitialized<felt252>;
type Unit = Struct<ut@Tuple>;

libfunc felt252_const<1> = felt252_const<1>;
libfunc store_temp<felt252> = store_temp<felt252>;
libfunc drop<felt252> = drop<felt252>;
libfunc alloc_local<felt252> = alloc_local<felt252>;
libfunc felt252_const<3> = felt252_const<3>;
libfunc store_local<felt252> = store_local<felt252>;
libfunc disable_ap_tracking = disable_ap_tracking;
libfunc enable_ap_tracking = enable_ap_tracking;
libfunc finalize_locals = finalize_locals;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc store_temp<Unit> = store_temp<Unit>;

felt252_const<1>() -> ([0]);
store_temp<felt252>([0]) -> ([1]);
drop<felt252>([1]) -> ();
alloc_local<felt252>() -> ([2]);
felt252_const<3>() -> ([3]);
store_local<felt252>([2], [3]) -> ([4]);
drop<felt252>([4]) -> ();
disable_ap_tracking() -> ();
enable_ap_tracking() -> ();
felt252_const<1>() -> ([5]);
store_temp<felt252>([5]) -> ([6]);
drop<felt252>([6]) -> ();
alloc_local<felt252>() -> ([7]);
felt252_const<3>() -> ([8]);
store_local<felt252>([7], [8]) -> ([9]);
drop<felt252>([9]) -> ();
finalize_locals() -> ();
disable_ap_tracking() -> ();
struct_construct<Unit>() -> ([10]);
store_temp<Unit>([10]) -> ([11]);
return([11]);

test::foo@0() -> (Unit);
